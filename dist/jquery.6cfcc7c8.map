{"version":3,"sources":["jquery.js"],"names":["window","$","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","oldApi","addClass","className","i","length","classList","add","find","selector","array","concat","from","end","each","fn","call","parent","node","indexOf","parentNode","push","children","print","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,CAAP,GAAWD,OAAOE,MAAP,GAAgB,UAAUC,eAAV,EAA2B;AAClD,QAAIC,iBAAJ;AACA,QAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACrCC,mBAAWC,SAASC,gBAAT,CAA0BH,eAA1B,CAAX;AACH,KAFD,MAEO,IAAIA,2BAA2BI,KAA/B,EAAsC;AACzCH,mBAAWD,eAAX;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAO;AACHK,gBAAQL,gBAAgBK,MADrB;AAEH;AACAC,gBAHG,oBAGMC,SAHN,EAGiB;AAChB,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIP,SAASQ,MAA7B,EAAqCD,GAArC,EAA0C;AACtCP,yBAASO,CAAT,EAAYE,SAAZ,CAAsBC,GAAtB,CAA0BJ,SAA1B;AACH;AACD,mBAAO,IAAP;AACH,SARE;AASHK,YATG,gBASEC,QATF,EASY;AACX,gBAAIC,QAAQ,EAAZ;AACA,iBAAK,IAAIN,IAAI,CAAb,EAAgBA,IAAIP,SAASQ,MAA7B,EAAqCD,GAArC,EAA0C;AACtCM,wBAAQA,MAAMC,MAAN,CAAaX,MAAMY,IAAN,CAAWf,SAASO,CAAT,EAAYL,gBAAZ,CAA6BU,QAA7B,CAAX,CAAb,CAAR;AACA;AACH;AACD;AACA;;AAEA;AACA;AACAC,kBAAMT,MAAN,GAAe,IAAf,CAXW,CAWS;AACpB,mBAAON,OAAOe,KAAP,CAAP;AACH,SAtBE;AAuBHG,WAvBG,iBAuBE;AACD,mBAAO,KAAKZ,MAAZ,CADC,CACkB;AACtB,SAzBE;AA0BHa,YA1BG,gBA0BEC,EA1BF,EA0BM;AACL,iBAAI,IAAIX,IAAE,CAAV,EAAYA,IAAEP,SAASQ,MAAvB,EAA8BD,GAA9B,EAAmC;AAC/BW,mBAAGC,IAAH,CAAQ,IAAR,EAAanB,SAASO,CAAT,CAAb,EAAyBA,CAAzB;AACH;AACD,mBAAO,IAAP;AACH,SA/BE;AAgCHa,cAhCG,oBAgCM;AACL,gBAAMP,QAAQ,EAAd;AACA,iBAAKI,IAAL,CAAU,UAACI,IAAD,EAAQ;AACd,oBAAGR,MAAMS,OAAN,CAAcD,KAAKE,UAAnB,MAAmC,CAAC,CAAvC,EAA0C;AACtCV,0BAAMW,IAAN,CAAWH,KAAKE,UAAhB;AACH;AACJ,aAJD;AAKA,mBAAOzB,OAAOe,KAAP,CAAP;AACH,SAxCE;AAyCHY,gBAzCG,sBAyCQ;AACP,gBAAMZ,QAAQ,EAAd;AACA,iBAAKI,IAAL,CAAU,UAACI,IAAD,EAAQ;AACdR,sBAAMW,IAAN,iCAAcH,KAAKI,QAAnB;AACA;AACH,aAHD;AAIA,mBAAO3B,OAAOe,KAAP,CAAP;AACH,SAhDE;AAiDHa,aAjDG,mBAiDI;AACHC,oBAAQC,GAAR,CAAY5B,QAAZ;AACH;AAnDE,KAAP;AAqDH,CAxED","file":"jquery.6cfcc7c8.map","sourceRoot":"..\\src","sourcesContent":["window.$ = window.jQuery = function (selectorOrArray) {\n    let elements\n    if (typeof selectorOrArray === 'string') {\n        elements = document.querySelectorAll(selectorOrArray)\n    } else if (selectorOrArray instanceof Array) {\n        elements = selectorOrArray\n    }\n    // api可以操作elements\n    // const api = {\n    //     //闭包：函数访问外部的变量\n    //     addClass(className) {\n    //         for (let i = 0; i < elements.length; i++) {\n    //             elements[i].classList.add(className)\n    //         }\n    // return api\n    //         return this //addClass里面的this是api\n    //     }\n    // }\n    // return api\n    return {\n        oldApi: selectorOrArray.oldApi,\n        //闭包：函数访问外部的变量\n        addClass(className) {\n            for (let i = 0; i < elements.length; i++) {\n                elements[i].classList.add(className)\n            }\n            return this\n        },\n        find(selector) {\n            let array = []\n            for (let i = 0; i < elements.length; i++) {\n                array = array.concat(Array.from(elements[i].querySelectorAll(selector)))\n                //array = array+elements2\n            }\n            // return array 错误\n            // return this 错误\n\n            // const newApi = jQuery(array)\n            // return newApi\n            array.oldApi = this //this就是api，数组是对象，对象可以加属性，this是旧api\n            return jQuery(array)\n        },\n        end(){\n            return this.oldApi //this就是当前的 api//api2  this就是新api\n        },\n        each(fn) {\n            for(let i=0;i<elements.length;i++) {\n                fn.call(null,elements[i],i)\n            }\n            return this\n        },\n        parent() {\n            const array = []\n            this.each((node)=>{\n                if(array.indexOf(node.parentNode) === -1) {\n                    array.push(node.parentNode)\n                }            \n            })\n            return jQuery(array)\n        },\n        children() {\n            const array = []\n            this.each((node)=>{\n                array.push(...node.children)\n                //等价于array.push(node.children[0],node.children[1],node.children[2]...)\n            })\n            return jQuery(array)\n        },\n        print(){\n            console.log(elements)\n        }\n    }\n}"]}